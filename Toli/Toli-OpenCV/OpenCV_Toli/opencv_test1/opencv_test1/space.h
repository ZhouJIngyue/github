//======================================================================
//文件名称：space.h
//功能概要：空间构件头文件
//    定义空间中点，向量，单位向量，直线，平面的结构体.
//    定义求空间向量长度的函数.
//    定义求空间向量点积的函数.
//    定义求空间向量差积的函数.
//    定义求空间中两点距离的函数.
//    定义求空间中点到直线距离的函数.
//    定义求空间中直线与平面交点的函数.
//    定义将空间中向量单位化的函数.
//    定义求空间中在指定方向上距离指定点指定远的点的函数.
//======================================================================

#ifndef _SPACE_H
#define _SPACE_H

#include "math.h"

//空间中点.
struct Space_Point
{
	double x;
	double y;
	double z;
};

//空间中向量.
struct Space_Vector
{
	double x;
	double y;
	double z;
};

//空间中单位向量.
struct Space_Unit_Vector
{
	double x;
	double y;
	double z;
};

//空间中直线.
//使用该直线经过的两点坐标描述.
struct Space_Line
{
	Space_Point p1;
	Space_Point p2;
};

//空间中平面.
//使用该平面上一点与该平面法向量描述.
struct Space_Plane
{
	Space_Point p;
	Space_Vector normal_vector;
};

//======================================================================
//函数名称：space_vector_length
//函数参数：s_vector：空间中向量.
//函数返回：空间向量长度.
//功能概要：求空间向量长度.
//======================================================================
double space_vector_length(Space_Vector s_vector);

//======================================================================
//函数名称：space_dot
//函数参数：s_vector1，s_vector2：空间中两向量.
//函数返回：空间中向量点积.
//功能概要：求空间中向量点积.
//======================================================================
double space_dot(Space_Vector s_vector1, Space_Vector s_vector2);

//======================================================================
//函数名称：space_cross
//函数参数：s_vector1，s_vector2：空间中两向量.
//函数返回：空间中向量差积.
//功能概要：求空间中向量差积.
//======================================================================
Space_Vector space_cross(Space_Vector s_vector1, Space_Vector s_vector2);

//======================================================================
//函数名称：space_point_point_distance
//函数参数：s_point1，s_point2：空间中两点.
//函数返回：空间中两点距离.
//功能概要：求空间中两点距离.
//======================================================================
double space_point_point_distance(Space_Point s_point1, Space_Point s_point2);

//======================================================================
//函数名称：space_point_line_distance
//函数参数：s_point：空间中一点.
//    s_line：空间中一直线.
//函数返回：空间中点到直线距离.
//功能概要：求空间中点到直线距离.
//======================================================================
double space_point_line_distance(Space_Point s_point, Space_Line s_line);

//======================================================================
//函数名称：space_line_plane_cross
//函数参数：s_line：空间中一直线.
//    s_plane：空间中一平面.
//函数返回：空间中直线与平面的交点.
//功能概要：求空间中直线与平面的交点.
//======================================================================
Space_Point space_line_plane_cross(Space_Line s_line,Space_Plane s_plane);

//======================================================================
//函数名称：space_vector_normalize
//函数参数：s_vector：空间中向量.
//函数返回：归一化后的该空间向量.
//功能概要：将空间中向量单位化.
//======================================================================
Space_Unit_Vector space_vector_normalize(Space_Vector s_vector);

//======================================================================
//函数名称：space_point_to_point
//函数参数：point_start：空间中起始点.
//    dir：从起始点指向目标点的单位向量.
//    length：目标点到起始点的距离.
//函数返回：目标点.
//功能概要：求空间中在指定方向上距离指定点指定远的点.
//======================================================================
Space_Point space_point_to_point(Space_Point point_start,
		Space_Unit_Vector dir,double length);

#endif